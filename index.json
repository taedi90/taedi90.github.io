[{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.svg","permalink":"https://log.taedi.net/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"서론 맥에서 이클립스를 사용하려면 불편함을 감수해야하는 부분이 있는데 그중에서도 제일은 한글 짤림 현상일 것이다. 이것은 한글 타이핑 시 마지막에 입력한 글자가 지워지는 현상인데, 이를 방지하려면 문장 작성 후 esc, enter, space 키 등을 입력 해주어야 하는 번거로움이 있다. (SQL 클라이언트 툴인 Dbeaver 또한 동일한 증상을 가지고 있다.)\n구글 검색을 해보니 2013년 이전부터 리포팅 되어왔으나 프로그램 개선이나 해결책이 없는 채로 방치된 문제로 보였고, 여러 포스팅에서 맞춤법 자동 수정 을 해제하라는 말이 있었지만 일단 현재기준으로 전혀 먹히지 않는다.\n결국, 개인적인 삽질 끝에 Karabiner-Elements 를 활용해서 불편함을 어느정도 해소할 수 있는 방법을 찾아보았다.\n바쁘신 분들은 아래에 적용 방법 부분만 확인하시길!\n원인 분석 추측건대 한글은 자모를 조합하여 문자가 되는 특성 때문에 영어처럼 바로 입력되지 않고 문자가 완성되기 까지 임시공간에 있다가 에디터에서 문자가 완성되었다고 판단하는 시점에 비로소 입력이 되는 것으로 보이는데, 다른 에디터와 비교해 이클립스에서 이 판단을 심도있게 고려해주지 않은 듯 하다. 대충 이클립스가 판단력이 나쁘다는 말\n그래서 일부 키 입력은 기존에 작성중인 임시 상태의 한글 입력을 취소시켜버린다. 글에서는 대충 문제 키 라는 표현으로 신호들을 다루겠다.\n backspace 방향키 cmd+e 같은 단축키 한영 전환 마우스 버튼  반면에 다음 입력신호는 직전까지 작성한 자모 조합을 완성 된 글자로 전환시킨다. 글에서는 탈출 키 라고 표현하겠다.\n escape space enter tab 숫자 \u0026amp; 기호 (다음 한글 자모)  단, 여기서 enter 키는 탈출 키 기능을 수행할 때 본연의 업무 (줄바꿈)를 수행하지 않는 문제가 발생한다.\n결론적으로 한글 자모 입력 후 문제 키 와 enter 키 입력 이벤트가 발생했을 때 작성중인 한글을 완성시키는 장치가 필요하다 판단했다.\n아이디어 Karabiner-Elements 는 키보드와 마우스 입력신호를 조건에 따라(conditions) 다른 신호로 맵핑해주는 Complex modifications 기능을 제공하고있어 이 방식을 사용하였다. 비슷한 기능을 제공하는 다른 프로그램 또는 내장 방식이 있다면 해당 방식을 사용해도 무방할듯 하다.\n처음에는 모든 입력 신호를 감지하여 한글 자모와 그 외의 입력으로 구분하고, 문제 키 직전의 최종 키가 한글이었는지 여부를 조사해 그에 맞는 동작을 하게 할까 생각해보았지만 Karabiner-Elements 에서 제공하는 방식으로는 json 코드만 수천줄이 넘어가기도 하고 조건 구문도 많아져 키입력 딜레이가 발생할 수도 있지않을까 하는 부분 때문에 포기하였다. 하지만 아래 시행착오를 겪었고 결국에 이 방법을 선택하게 되었다.\n시행착오 1 처음으로 시도한 것이 문제 키 들이 입력되는 순간에 esc 키를 먼저 입력해 작성중인 자모 조합이 완성 된 문자가 되도록 하는 간단한 아이디어였다.\n{ \u0026#34;title\u0026#34;: \u0026#34;이클립스 한글 짤림 해결\u0026#34;, \u0026#34;rules\u0026#34;: [ { \u0026#34;description\u0026#34;: \u0026#34;이클립스_백스페이스\u0026#34;, \u0026#34;manipulators\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;basic\u0026#34;, \u0026#34;from\u0026#34;: { \u0026#34;key_code\u0026#34;: \u0026#34;delete_or_backspace\u0026#34; }, \u0026#34;parameters\u0026#34;: { \u0026#34;basic.to_if_held_down_threshold_milliseconds\u0026#34;: 10 }, \u0026#34;conditions\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;frontmost_application_if\u0026#34;, \u0026#34;bundle_identifiers\u0026#34;: [ \u0026#34;^org\\\\.eclipse\\\\.platform\\\\.ide$\u0026#34; ] }, { \u0026#34;type\u0026#34;: \u0026#34;input_source_if\u0026#34;, \u0026#34;input_sources\u0026#34;: [ { \u0026#34;language\u0026#34;: \u0026#34;^ko$\u0026#34;, \u0026#34;input_source_id\u0026#34;: \u0026#34;^com\\\\.apple\\\\.inputmethod\\\\.Korean\\\\.2SetKorean$\u0026#34; } ] } ], \u0026#34;to\u0026#34;: [ { \u0026#34;key_code\u0026#34;: \u0026#34;escape\u0026#34; } ], \u0026#34;to_after_key_up\u0026#34;: [ { \u0026#34;key_code\u0026#34;: \u0026#34;delete_or_backspace\u0026#34; } ], \u0026#34;to_if_held_down\u0026#34;: [ { \u0026#34;key_code\u0026#34;: \u0026#34;delete_or_backspace\u0026#34;, \u0026#34;halt\u0026#34;: true } ] } ] } ] } 코드 일부를 간단히 설명하자면\n conditions(조건) - 입력 소스가 한글이고, 최상단 앱이 이클립스 일 경우에 from(입력 받은 키값) - backspace 가 입력되면 to(변경할 키값) - esc + backspace 로 입력을 전환  하는 간단한 내용으로 이루어져있다.\nenter, tab, space 키들은 경우에 따라 작성한 코드가 변형(줄바꿈, 들여쓰기, 띄어쓰기)될 수 있기 때문에 가장 리스크가 덜한 것이 esc 키 였지만 이마저도 문제점이 있었다. 바로 클래스 생성과 같은 창과 상단 메뉴, 팝업 등에서 esc 키가 입력되어 창이 종료되는 문제가 발생했고 이것도 자주 겪으니 불편하기 짝이없었다.\n추가적으로 한글입력을 하지 않았더라도 시스템 입력 소스가 한글이면 무조건 동작하기 때문에 예상치 않은 문제가 지속적으로 발생하는 문제도 있었다.\n시행착오 2 1번에서 시도한 방식에서 esc 키를 Caps Lock 키 2회 반복으로 변경하여 보았다. 맥 에서는 자체적으로 Caps Lock 키를 한영 전환키로 사용할 수 있는 기능이 있는데, 이를 이용해 입력 소스를 전환하면 작성한 글이 짤리지 않는다.\nCaps Lock 키를 이용하면 작성하던 코드가 훼손되지도 않고 팝업이나 메뉴 창이 의도치 않게 꺼지는 현상도 잡을 수 있지만, 일단 키입력 딜레이가 너무 크다(0.4초 정도). 딜레이를 줄이면 정상적으로 동작하지 않았고, 때문에 그만큼 부자연스러움이 커지는 문제가 발생했다.\n또한, 키조합 상황에서는 먹히지 않는다는 단점도 존재했다. cmd + s, shift + 방향키 등 키를 누른상태에서는 Caps Lock 키가 동작하지 않았다.\n\u0026#34;key_code\u0026#34;: \u0026#34;caps_lock\u0026#34;, \u0026#34;hold_down_milliseconds\u0026#34;: 200 잠정적 결론 처음에 미친짓이라 생각했던 모든 키의 입력을 받아 처리하는 방식을 선택했다. (적어도 내 수준에서는 이게 가장 섹시한 방법인듯 하다.) 우려와 같이 딜레이가 발생한다던지 하는 상황은 발생하지 않았고, 긴 코드 작업도 python 반복문으로 해결했다.\n이 방식이 불가피하다고 판단한 사유는 다음과 같다.\n karabiner 만으로는 이클립스 내부에 어떤 창에 현재 포커스가 잡혀있는지 확인할 수 없다. 에디터, 콘솔, 네비게이터, 메뉴창 등 작업에 따라 다른 조건을 부여할 수 없다. (메뉴창에서만 esc키 말고 다른방법 쓰면되지! 가 안먹힌다는 말) 직전 입력 신호가 한글 키 일때만 동작을 수행하려면 모든 키 입력 감지가 불가피하다.  위의 두가지 사유를 해결할 수 있는 솔루션이 있다면 좀 더 간결한 방법이 나올 수 있을 것 같다.\n방식을 간단하게 설명하자면 우선 입력 신호를 한글 키, 영문 키 및 탈출 키, 문제 키 의 세개 분류로 나누었고 신호가 입력될 때 아래와 같은 로직을 수행한다.\n 한글 키가 입력 될 경우 변수를 1로 저장 영문 키 및 탈출 키 가 입력 될 경우 변수를 0으로 저장 문제 키 가 입력 될 경우, 변수가 1일 경우에만 space + backspace 조합으로 한글을 완성시키고 변수를 0으로 저장  코드는 5,000줄 가량 되어 아래에 깃허브 링크로 대체하였다.\n적용 방법 1. Karabiner-Elements 설치 Karabiner-Elements 설치\n2. .json 파일 다운로드 .json 파일은 여기에서 다운로드 가능하다.\njson 파일을 생성할 때 사용한 python 코드도 같이 확인할 수 있다. (json 라이브러리도 있던데 그냥 쌩 텍스트로 작업했다.)\n아래 경로에 다운로드 받은 .json 파일을 위치시킨다.\n ~/.config/karabiner/assets/complex_modifications\n 3. 설정 추가 Karabiner-Elements Preferences \u0026gt; Complex modifications 탭에서 필요한 규칙들을 추가해주면 된다. 기존에 다른 규칙들을 사용하고 있는 경우 정상적으로 작동하지 않을 수 있으니 상단으로 올려 우선순위를 높여주면 된다.\n마우스 관련 옵션을 사용하기 위해서는 아래 두가지 설정이 더 필요하다.\nKarabiner-Elements Preferences \u0026gt; Devices 에서 사용하는 마우스가 체크 되어있는지 확인해야한다.\n오른쪽 커맨드 버튼을 한영 전환 키로 사용할 경우에는 시스템 환경설정에 단축키를 아래와 같이 변경한다.\n현재까지 발견 된 문제점 현재까지 발견한 문제는 다음과 같으며 이 밖에도 다른 문제가 있을 수 있으니 유의할 것!\n 한글 입력 직후 빠르게 cmd + s 등의 키조합을 사용하려할 경우, 올바르게 동작하지 않는 현상 - cmd키를 누르고 0.2초 이상 지난 후에 s 버튼을 눌러야 정상적으로 동작함 한글입력 중 backspace 시 \u0026lsquo;종성\u0026rsquo; - \u0026lsquo;중성\u0026rsquo; - \u0026lsquo;초성\u0026rsquo; 순으로 지워지는 것이 아니라 한개 글자가 바로 삭제 되는 현상 - 2021.10.17 추가 내용 참고  그리고 최고의 해결책은 이클립스를 포기하고 intellij를 사용하는 것이다.\n2021.10.17 추가 구름 입력기를 쓴다면 backspace 는 Complex modifications 에서 제외시키면서 문제점 2번 을 해결할 수 있다.\n","date":"October 16, 2021","hero":"/images/hero/java.png","permalink":"https://log.taedi.net/eclipse-mac-kor-fix/","summary":"서론 맥에서 이클립스를 사용하려면 불편함을 감수해야하는 부분이 있는데 그중에서도 제일은 한글 짤림 현상일 것이다. 이것은 한글 타이핑 시 마지막에 입력한 글자가 지워지는 현상인데, 이를 방지하려면 문장 작성 후 esc, enter, space 키 등을 입력 해주어야 하는 번거로움이 있다. (SQL 클라이언트 툴인 Dbeaver 또한 동일한 증상을 가지고 있다.)\n구글 검색을 해보니 2013년 이전부터 리포팅 되어왔으나 프로그램 개선이나 해결책이 없는 채로 방치된 문제로 보였고, 여러 포스팅에서 맞춤법 자동 수정 을 해제하라는 말이 있었지만 일단 현재기준으로 전혀 먹히지 않는다.","tags":["eclipse","macOS"],"title":"이클립스(eclipse), Dbeaver 맥에서 한글 짤림문제 해결"},{"categories":null,"contents":"오랜만에 파이썬을 사용하려고 보니 pyenv 와 pipenv 용어들은 기억나는데 좀처럼 어떻게 써야할지 감이 잡히지 않았다. 물론 글로벌 환경에서 작업해도 무방했지만 소싯적 시험기간에 공부보단 책상정리에 열중했던 주의력 산만한 학생으로서 두가지를 반드시 사용해야겠다는 결의를 다져보았다. 찾아보니 예전에 같은 주제로 메모도 해두었지만 나조차 이해가 되지않을 만큼의 내용으로 도움이 되지 않았고 이에 새롭게 파이썬 가상환경 사용방법을 알아 보았다. 물론 파이썬 가상환경의 전반적인 부분은 아니고 내가 사용할 만큼, 그리고 세팅하면서 발생하는 의구심에 대한 부분을 나의 눈높이 정도로 정리하였다. (막상 쓰고보니 이전에 쓴 글이 이해되는 것 같은.. 그때 훨씬 더 많이 알고 있었을지도?)\n내용 가상환경은 간단하게 말해 프로젝트마다 독립된 방을 만들어서 각각의 프로젝트를 별도의 환경으로 구성하거나 여러 pc 혹은 협업자와 동일한 환경을 구성하는 것을 좀 더 좀 더 편리하게 해주는 툴이라고 볼 수 있다.\n프로젝트마다 환경을 다르게 해주는 이유는 무엇인가? 예를 들면 파이썬 3.9 버전을 사용하고 있는데 내가 써야할 패키지는 3.6버전에서만 동작한다면 3.9버전을 삭제하고 3.6버전을 설치하던지 패키지를 포기할지 고민하는 순간이 생길 수 있다. 각각의 프로젝트마다 패키지 버전을 달리해야할 수도 있으며 프로젝트에 사용하지 않는 불필요한 패키지들 때문에 pyinstaller 등으로 배포 파일을 만들 때 의도치 않게 용량이 커지는 문제가 발생할 수도 있다. 가상환경은 이런 걱정을 완화시켜줄 수 있다.\n그럼 pyenv는 뭐고 pipenv는 무엇인가? 이름 또한 너무 비슷하다! 활용할 부분에 대해서만 설명하자면 다음과 같다.\npyenv : pc에 여러 버전의 파이썬을 설치해 프로젝트마다 각기 다른 버전의 파이썬 환경을 구성할 수 있다.\npipenv : pip 와 virtualenv 를 합쳐놓은 것, 가상환경을 생성하고 패키지 구성을 서로 다르게 할 수 있다.\npipenv는 pyenv가 설치되어 있다면 가상환경에 패키지 뿐만아니라 파이썬도 버전을 지정해 줄 수 있다.\npyenv 사용 방법 간단한 사용법을 정리해 보았다.\n👉 설치하기 homebrew 환경에서는 아래 명령어로 설치가 가능하다.\n$ brew install pyenv 👉 파이썬 설치 pyenv를 설치하면 아래 명령어들로 간단하게 설치 가능한 파이썬 버전을 확인하고 설치할 수 있다.\n# 설치 가능 리스트 확인 $ pyenv install -l # 3.7.3 버전 설치 $ pyenv install 3.7.7 🙅🏻 파이썬 설치 오류 관련 간혹 아래와 같은 오류 메세지들과 함께 설치가 안되는 경우가 발생할 수 있다. (그게 바로 나의 경우..!)\n xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun\n  error: implicit declaration of function \u0026lsquo;sendfile\u0026rsquo; is invalid in C99\n 나는 이곳을 참고하여 다음 스텝들을 진행하였고 정상적으로 설치가 되었다.\n zlip bzip2 재설치  $ brew reinstall zlib bzip2  쉘에 환경변수 추가 (.zshrc 파일에 추가해둬도 될 것 같다)  export PATH=\u0026#34;$HOME/.pyenv/bin:$PATH\u0026#34; export PATH=\u0026#34;/usr/local/bin:$PATH\u0026#34; eval \u0026#34;$(pyenv init -)\u0026#34; eval \u0026#34;$(pyenv virtualenv-init -)\u0026#34; export LDFLAGS=\u0026#34;-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib\u0026#34; export CPPFLAGS=\u0026#34;-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include\u0026#34;  설치 시도(3.6.0 버전 예시)  CFLAGS=\u0026#34;-I$(brew --prefix openssl)/include -I$(brew --prefix bzip2)/include -I$(brew --prefix readline)/include -I$(xcrun --show-sdk-path)/usr/include\u0026#34; LDFLAGS=\u0026#34;-L$(brew --prefix openssl)/lib -L$(brew --prefix readline)/lib -L$(brew --prefix zlib)/lib -L$(brew --prefix bzip2)/lib\u0026#34; pyenv install --patch 3.6.0 \u0026lt; \u0026lt;(curl -sSL https://github.com/python/cpython/commit/8ea6353.patch\\?full_index\\=1) 다른 버전을 설치하려면 위의 명령어에서 버전을 변경하여 준다.\n이렇게 해도 안된다면 xcode CommandLineTools를 다시 설치하고 위를 반복한다.\n$ sudo rm -rf /Library/Developer/CommandLineTools $ xcode-select --install 👉 설치 목록 확인 pyenv 로 설치한 파이썬 버전들은 다음 명령어로 확인할 수 있다.\n$ pyenv versions * system (set by /Users/taedi/.pyenv/version) 3.6.13 3.7.3 pypy3.5-7.0.0 👉 기타 다른 기능들은 pyenv -h 나 깃헙에서 확인이 가능하다.\nUsage: pyenv \u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;] Some useful pyenv commands are: --version Display the version of pyenv commands List all available pyenv commands exec Run an executable with the selected Python version global Set or show the global Python version(s) help Display help for a command hooks List hook scripts for a given pyenv command init Configure the shell environment for pyenv install Install a Python version using python-build local Set or show the local application-specific Python version(s) prefix Display prefix for a Python version rehash Rehash pyenv shims (run this after installing executables) root Display the root directory where versions and shims are kept shell Set or show the shell-specific Python version shims List existing pyenv shims uninstall Uninstall a specific Python version version Show the current Python version(s) and its origin version-file Detect the file that sets the current pyenv version version-name Show the current Python version version-origin Explain how the current Python version is set versions List all Python versions available to pyenv whence List all Python versions that contain the given executable which Display the full path to an executable See `pyenv help \u0026lt;command\u0026gt;\u0026#39; for information on a specific command. For full documentation, see: https://github.com/pyenv/pyenv#readme pipenv 사용 방법 pipenv의 사용 방법은 아래에서 상세하게 다룰거라 간단하게 정리했다.\n👉 설치하기 $ brew install pipenv 👉 명령어 # 파이썬 버전 지정 $ pipenv --python 3.7.3 # 패키지 설치 $ pipenv install [패키지명] $ pipenv install $ pipenv install --dev # venv 진입/종료 $ pipenv shell $ exit $ pipenv run python # venv 경로 확인 $ pipenv --venv $ pipenv --py # venv 삭제 $ pipenv --rm # 패키지 목록 확인 $ pipenv graph 더 자세한 내용은 pipenv -h 를 확인해보자.\nUsage: pipenv [OPTIONS] COMMAND [ARGS]... Options: --where Output project home information. --venv Output virtualenv information. --py Output Python interpreter information. --envs Output Environment Variable options. --rm Remove the virtualenv. --bare Minimal output. --completion Output completion (to be executed by the shell). --man Display manpage. --support Output diagnostic information for use in GitHub issues. --site-packages / --no-site-packages Enable site-packages for the virtualenv. [env var: PIPENV_SITE_PACKAGES] --python TEXT Specify which version of Python virtualenv should use. --three / --two Use Python 3/2 when creating virtualenv. --clear Clears caches (pipenv, pip, and pip- tools). [env var: PIPENV_CLEAR] -v, --verbose Verbose mode. --pypi-mirror TEXT Specify a PyPI mirror. --version Show the version and exit. -h, --help Show this message and exit. Usage Examples: Create a new project using Python 3.7, specifically: $ pipenv --python 3.7 Remove project virtualenv (inferred from current directory): $ pipenv --rm Install all dependencies for a project (including dev): $ pipenv install --dev Create a lockfile containing pre-releases: $ pipenv lock --pre Show a graph of your installed dependencies: $ pipenv graph Check your installed dependencies for security vulnerabilities: $ pipenv check Install a local setup.py into your virtual environment/Pipfile: $ pipenv install -e . Use a lower-level pip command: $ pipenv run pip freeze Commands: check Checks for PyUp Safety security vulnerabilities and against PEP 508 markers provided in Pipfile. clean Uninstalls all packages not specified in Pipfile.lock. graph Displays currently-installed dependency graph information. install Installs provided packages and adds them to Pipfile, or (if no packages are given), installs all packages from Pipfile. lock Generates Pipfile.lock. open View a given module in your editor. run Spawns a command installed into the virtualenv. scripts Lists scripts in current environment config. shell Spawns a shell within the virtualenv. sync Installs all packages specified in Pipfile.lock. uninstall Uninstalls a provided package and removes it from Pipfile. update Runs lock, then sync. 그래서 프로젝트를 어떻게 설정하는가? 제일 중요한 부분이다. 간만에 파이썬을 이용해서 무언가를 만들어보려고하니 이 부분에서 막혀 한참을 헤메었다. 반드시 이렇게 해야하는 것은 아니겠지만 나의 경우 이렇게 세팅해보았다.\n1. pyenv로 원하는 파이썬 버전 설치 기존에 설치되어 있다면 추가로 설치해줄 필요는 없다.\n$ pyenv install 3.7.3 2. pipenv로 python 버전 선언 $ pipenv --python 3.7.3 3. 패키지 설치 프로젝트에 필요한 패키지들을 설치해준다.\n$ pipenv install pyqt5 🤔 어딘가에서 가져온 프로젝트는? 프로젝트를 새로 생성하는 것이 아니라 git repo 등을 통해서 pull 하였다면 Pipfile 및 Pipfile.lock 파일이 생성되어 있을 수 있다. 이 경우에는 2번과 3번을 건너뛰고 아래 명령어를 입력해주면 되는데 여기서 또 sync 와 install 두개로 나뉜다. 이곳에 따르면\ninstall 은 Pipfile 에 기록된 의존성을 토대로 패키지들을 설치하고 그걸 토대로 Pipfile.lock를 업데이트 해버린다고 한다. sync 는 Pipfile.lock 에 지정된 패키지 버전을 그대로 설치하는 것이라 실제 작업 환경과 동일하게 매칭시켜 줄 수 있어 선호된다고 한다. (간단히 말해서 install 은 호환버전 설치, sync는 완전 일치 같은 느낌이려나..)\n$ pipenv sync $ pipenv install 🤔 Pipfile.lock 생성 시기? Pipfile.lock 파일은install, uninstall, 명령어를 사용할 때 자동으로 생성된다. 그리고lock 명령어를 사용해 직접 생성하여 줄 수도 있다. 한개 파일이 아니라 Pipfile 과 나누어져 있는 부분과 관련해서는 의존성, 검증, 해시 생성 목적 등을 좀 더 구체적으로 이해하고 난 후에 알 수 있을 것 같다.\n✍🏻 프로젝트 내부에 .venv 폴더 생성하기 기본적으로 가상환경 경로는 /Users/{사용자명}/.local/share/virtualenvs/{프로젝트명}-{난수번호}/ 에 위치한다.\n$ pipenv --venv /Users/taedi/.local/share/virtualenvs/test-XBItUTrH 이것을 프로젝트 폴더 내에 위치하려면 .venv 폴더를 추가하여 주면 된다.\n# 프로젝트 디렉토리에 .venv 폴더 생성 $ mkdir .venv 이후 가상환경을 생성하여 주면 프로젝트 폴더 내에 .venv 폴더에 위치한 것을 확인할 수 있다. 기존에 이미 가상환경을 설정했다면 pipenv --rm 으로 기존 환경을 삭제해주어야 한다.\n$ pipenv --python 3.7.3 $ pipenv --venv /Users/taedi/workspace_python/test/.venv .venv를 활용하면 VSCode 에서 프로젝트 가상환경의 python interperter 를 default 로 설정되도록 할 수 있다. settings.json 파일에 아래 코드를 추가하면 된다. settings.json 파일은 /Users/{사용자명}/Library/Application Support/Code/User 경로에 있다.\n\u0026#34;python.venvPath\u0026#34;: \u0026#34;${workspaceFolder}/.venv/bin/python\u0026#34;, \u0026#34;python.pythonPath\u0026#34;: \u0026#34;.venv/bin/python\u0026#34; 4. 가상환경 활성 \u0026amp; 비활성 다음 명령어로 가상환경 shell 을 실행하고 종료할 수 있다.\n$ pipenv shell $ exit 🙊 가상환경을 활성화 없이 바로 실행하는 법 또는 shell 실행 없이 바로 프로젝트 파일을 실행할 수도 있다.\n$ pipenv run python $ pipenv run python test.py .zshrc 에 alias prp=\u0026quot;pipenv run python\u0026quot; 와 같이 설정하여 좀더 간편하게 사용할 수도 있다.\n👉 의존성 그래프 확인 다음 명령어로 가상환경의 의존성 그래프를 확인할 수 있다.\n$ pipenv graph 👉 가상환경 경로 확인 가상환경이 설치된 경로는 아래 명령어를 통해서 확인이 가능하다.\n$ pipenv --venv /Users/taedi/.local/share/virtualenvs/test-XBItUTrH $ pipenv --py /Users/taedi/.local/share/virtualenvs/test-XBItUTrH/bin/python 5. 가상환경 삭제 가상환경이 더이상 필요하지 않거나 어딘가에서 Pipfile 파일을 받아왔는데 충돌이 일어난다면 아래 명령어로 기존의 가상환경을 지울 수 있다.\n$ pipenv —rm 기타 설정을 다하고나니 글로벌 환경에 설치했던 패키지들을 모조리 지우고 싶은 충동이 생겼다. 삭제도 할겸 pip 명령어도 간단하게 알아보았다.\npip 기본 파이썬 패키지 관리자로 풀네임은 Pip Installs Packages 재귀약어라는데 이게 왜 궁금했는지는 모르겠다.\n👉 pip 사용 방법  순서대로 pip 업데이트, 패키지 설치, 패키지 삭제\npip install —upgrade pip\npip install [패키지명]\npip uninstall [패키지명]\n 설치 된 패키지는 아래 명령어로 확인할 수 있다.\npip list 👉 pip 패키지 한번에 삭제하기 아무튼 가상환경을 다 생성하고 나면 기존에 pip로 설치했던 패키지들을 싹 밀어버리고 싶은 충동이 생길 수 있다.\n$ pip freeze \u0026gt; requirements.txt $ pip uninstall -r requirements.txt -y 명령어를 실행한 폴더에 requirements.txt 라는 파일로 설치된 패키지와 버전들이 명세되고 이것들을 읽어와서 모조리 지우는 것이다. 같은 맥락으로 복구는 아래와 같은 방식으로 하면 된다.\n$ pip install -r requirements.txt 물론 복구할 예정이 없다면 rm requirements.txt 명령어로 싸악 지워버리면 될 것 같다.\npython3 → python 맥은 기본적으로 2버전대 파이썬이 설치되어 있다. 때문에 3버전대를 이용하려면 python3 과 pip3 명령어를 사용해야한다. 불편함이 느껴진다면 .zshrc 혹은 .bashrc 파일을 실행해 아래 값을 입력하고 저장하면 된다.\n# python3 to python alias pip=\u0026#34;pip3\u0026#34; alias python=\u0026#34;python3\u0026#34; 이후 2버전대 python은 python2 로 호출하면 된다.\n참고  https://github.com/pyenv/pyenv https://github.com/pypa/pipenv https://www.daleseo.com/python-pipenv/ https://towardsdatascience.com/python-environment-101-1d68bda3094d  ","date":"September 18, 2021","hero":"/images/hero/python.png","permalink":"https://log.taedi.net/python-virtual-environment-setup/","summary":"오랜만에 파이썬을 사용하려고 보니 pyenv 와 pipenv 용어들은 기억나는데 좀처럼 어떻게 써야할지 감이 잡히지 않았다. 물론 글로벌 환경에서 작업해도 무방했지만 소싯적 시험기간에 공부보단 책상정리에 열중했던 주의력 산만한 학생으로서 두가지를 반드시 사용해야겠다는 결의를 다져보았다. 찾아보니 예전에 같은 주제로 메모도 해두었지만 나조차 이해가 되지않을 만큼의 내용으로 도움이 되지 않았고 이에 새롭게 파이썬 가상환경 사용방법을 알아 보았다. 물론 파이썬 가상환경의 전반적인 부분은 아니고 내가 사용할 만큼, 그리고 세팅하면서 발생하는 의구심에 대한 부분을 나의 눈높이 정도로 정리하였다.","tags":["pip","pipenv","pyenv","python"],"title":"파이썬 가상환경 설정(pyenv, pipenv)"},{"categories":null,"contents":"서론 코딩 공부를 시작하며 메모는 선택이 아닌 필수가 되었다. 처음에는 노션으로 기본적인 메모를 하고 어느정도 정리가 되면 티스토리에 업로드를 할 것을 계획했고 포스팅을 조금씩 해나가고 있었는데, 언젠가부터 글을 작성할 때 마다 reCAPTCHA 가 발생하기 시작했다.\n물론 직접 글을 작성할 때야 체크 항목이 하나 늘어난 것 뿐이지만, 문제는 OPEN API 방식의 포스팅은 완전히 불가능해져 애용하던 Notion2Tistory 를 활용할 수가 없어진 것이 큰 문제였다. (노션에 작성한 글을 API 없이 티스토리에 업로드 하기위해서는 대단한 인내심이 필요했다.)\nreCAPTCHA 가 모든 블로그에 해당하는 사항이 아니었기 때문에 아무래도 내 블로그가 저품질 판정을 받은 것 같은데, 도배나 광고글을 작성한 적이 없고 게시글 수도 많지않아 이같은 처분이 당황스러워 고객센터에 문의도 해보았으나 이렇다할 답변을 받지 못했고, 티스토리 내에서 해결책을 찾느니 이왕 이렇게 된거 다른 서비스를 찾아보기로 결심하게 되었다.\n결론적으로 Github Pages 와 Hugo 를 활용하기로 결정하였고, 조만간 세팅했던 기억도 가물가물해질 것이 분명하기 때문에 기록으로 남겨놓고자 한다.\n내게 필요했던 사항 1. 노션 메모를 최소한의 수정 또는 무수정으로 배포할 수 있을 것 노션과의 호환성은 0순위였다. 가뜩이나 글을쓰고 정리하는게 어렵게 느껴지는데 플랫폼을 오가며 글을 수정하고 있으면 글을 다듬는 실력은 늘지도 모르겠지만, 그만큼 학습할 시간이 부족해 주객이 전도된다고 느껴졌다. 노션으로 작성한 메모를 마크다운 형식으로 배포할 수 있기 때문에 (문제가 꽤 있다는 것을 후에 깨달았다) 마크다운을 지원하는 medium, velog, wordpress, github pages 들을 리스트에 올렸다.\n2. 방문 유입은 크게 관계 없음 사실 작성하게 될 글들이 매우 기초적이고 오류 투성이가 될 예정이라 많은 노출은 부담스럽다. 그래서 velog 같은 서비스도 괜찮다고 생각했지만 전문적인 글들 사이에 나의 초라한 메모가 혹여 노출되진 않을까 하는 자격지심에 나중에 기회가 되면 사용해보겠다고 마음먹었다.(고수분들이 지켜보고 있다..! ' \u0026lsquo;;)\n3. 무료이고 안정적인 서비스 면 좋겠다고 생각했다. 다행이도 대부분의 서비스가 무료 플랜이 존재하였고 안정적으로 보였다.\nGithub Pages를 선택한 이유 개별적인 설정도 필요하여 다른 서비스에 비해서 시간투자가 예상되긴 했지만, 그만큼 자유도가 높지 않을까 생각되기도 했고 git pull 한번이면 손쉽게 게시했던 내용을 백업할 수 있다는 점이 매력적이었다. 공부하는셈 치자는 합리화와 함께 Github Pages 를 선택하게 되었다. ****Github Pages 에 적용할 수 있는 블로그 프레임워크 중에 Jekyll 과 Hugo 가 인기가 있는듯 했고, 기존에 Jekyll 로 세팅을 해봤기 때문에 이번엔 Hugo 를 선택하였다.\n설치 1. 휴고 설치 brew install hugo brew 명령어를 사용할 수도 있으나 arm맥에서 정상적으로 작동하는지 확인되지 않아 직접 다운받아 알맞은 경로에 압축을 풀고 path를 설정해 주었다.\n https://github.com/gohugoio/hugo\n export PATH=\u0026#34;/Users/taedi/hugo/bin:$PATH\u0026#34; 2. 사이트 생성 hugo new site taedi90.github.io -f=yaml --force cd taedi90.github.io git init 3. 테마 다운로드 테마는 Hugo 사이트에서 여러가지 중에 선택할 수 있는데 테마마다 설정들이 조금씩 달라 자주 변경하는 것은 쉽지 않을 것 같다. 목차와 카테고리 기능이 필요해 Toha 테마를 선택했다\ngit submodule add https://github.com/hugo-toha/toha.git themes/toha 4. 기본 설정 테마마다 설정이 다를 수 있으므로 각 테마의 readme.md 파일이나 Docs 사이트를 확인하여 config.yaml 파일을 알맞게 수정해준다.\n5. 실행 실행은 아래 명령어 중에 선택하여 입력하면 된다. \u0026lsquo;-D\u0026rsquo;는 front matter 에 draft가 true로 체크 된 컨텐츠도 빌드하여 확인할 수 있도록 해준다.\nhugo server -D hugo server --bind 아이피주소 -D 6. 댓글기능 (utterances) 추가 깃허브에 Public 리포지토리를 추가해준다. 리포지토리 명은 \u0026lsquo;blog_comments\u0026rsquo; 로 지정해 주었다.\n그리고 여기를 눌러 방금 생성한 리포지토리에 utterances 를 설치하고 스크립트를 테마의 알맞은 부분에 넣어주면 된다.\n참고  https://gohugo.io/getting-started/quick-start/ https://ialy1595.github.io/post/blog-construct-1/ https://utteranc.es/  ","date":"September 13, 2021","hero":"/images/hero/blog.png","permalink":"https://log.taedi.net/hugo-install/","summary":"서론 코딩 공부를 시작하며 메모는 선택이 아닌 필수가 되었다. 처음에는 노션으로 기본적인 메모를 하고 어느정도 정리가 되면 티스토리에 업로드를 할 것을 계획했고 포스팅을 조금씩 해나가고 있었는데, 언젠가부터 글을 작성할 때 마다 reCAPTCHA 가 발생하기 시작했다.\n물론 직접 글을 작성할 때야 체크 항목이 하나 늘어난 것 뿐이지만, 문제는 OPEN API 방식의 포스팅은 완전히 불가능해져 애용하던 Notion2Tistory 를 활용할 수가 없어진 것이 큰 문제였다. (노션에 작성한 글을 API 없이 티스토리에 업로드 하기위해서는 대단한 인내심이 필요했다.","tags":["blog","github pages","hugo"],"title":"Github 블로그 설정  1. Hugo 설치"},{"categories":null,"contents":"글 게시 작성한 글을 게시하려면 md 형식으로 저장하여 프로젝트 내부의 content 폴더에 위치시키면 된다.\nfront matter 설정 글 상단에 yaml, toml, json 키 값 쌍으로 이워진 front matter 를 작성해야한다. front matter 는 종류가 꽤 다양해 공식 문서를 확인해보고 필요한 것들을 선택적으로 사용하면 될 듯하다. 그리고 적용한 테마에 따라서 필수적으로 요구되는 front matter 가 달라질 수 있고 형식 또한 달라질 수 있는 듯 하다.\nhttps://gohugo.io/content-management/front-matter/\n섹션 설정 hugo는 폴더로 섹션과 하위 섹션을 구분할 수 있다. 거기에 맞춰 md 파일을 위치시키면 되고 기본적으로 content 폴더 이후 경로가 url이 된다. 이를 변경하려면 front matter 중 url 을 이용하면 된다. 사실 몇번을 읽어봐도 이해가 잘 되지않아 마찬가지로 공식문서 링크를 남긴다.\nhttps://gohugo.io/content-management/organization/\n테마 설정 시중에 배포되어 있는 테마를 받아 적용하게 되면 경우에 따라 입맛대로 수정하고 싶은 욕구가 생길 수 있다. 그럴 때 pull 받은 테마를 바로 수정해도 반영이 되지만 가급적 루트 폴더에 사본을 만들어 해당 파일을 수정하여 사용하는 편이 유지보수 측면에서 유용하다.\n예를들어 /themes/toha/layouts/single.html 파일을 수정하고 싶다면 루트폴더에 /layouts 경로를 만들어 파일을 복사하고 수정하여 쓰는 것이다.\n빌드시에 적용한 테마의 파일과 루트 파일을 합치게 되는데, 동일한 파일이 있다면 루트 폴더의 파일을 우선적으로 사용하기 때문에 이같은 방식이 가능하다. (더 자세한 내용은 이 분 블로그 내용 참고)\n처음엔 이 내용을 몰라서 submodule로 등록한 테마 디렉토리를 직접 수정해가며 \u0026lsquo;나중에 테마 업데이트가 있으면 이 부분을 어떻게 반영하지\u0026hellip;?\u0026rsquo; 생각하고 있었다. 역시 무식하면 용감한듯하다. 덕분에 설정했던 내용을 다시 다 잡아주었다.\n같은 맥락으로 여러개의 테마를 우선순위를 두어 적용도 가능한 듯 한데 도저히 엄두가 나질않아 포기했다. (관심 있으신 분들은 여기를 참고)\n이 부분만 제대로 활용하면 테마 설정은 입맛대로 할 수 있다. (원래는 테마 설정하면서 여러 삽질 했던 기록들을 작성하려 했는데.. 오래되어 다 까먹어버렸다.)\n참고  https://gohugo.io/hugo-modules/theme-components/ https://ialy1595.github.io/post/blog-construct-2/  ","date":"September 13, 2021","hero":"/images/hero/blog.png","permalink":"https://log.taedi.net/hugo-setting/","summary":"글 게시 작성한 글을 게시하려면 md 형식으로 저장하여 프로젝트 내부의 content 폴더에 위치시키면 된다.\nfront matter 설정 글 상단에 yaml, toml, json 키 값 쌍으로 이워진 front matter 를 작성해야한다. front matter 는 종류가 꽤 다양해 공식 문서를 확인해보고 필요한 것들을 선택적으로 사용하면 될 듯하다. 그리고 적용한 테마에 따라서 필수적으로 요구되는 front matter 가 달라질 수 있고 형식 또한 달라질 수 있는 듯 하다.\nhttps://gohugo.io/content-management/front-matter/\n섹션 설정 hugo는 폴더로 섹션과 하위 섹션을 구분할 수 있다.","tags":["blog","github pages","hugo"],"title":"Github 블로그 설정 2. 세부 설정"},{"categories":null,"contents":"노션은 기본적으로 작성한 글을 마크다운으로 내보낼 수 있는 기능이 있어 hugo 포스팅을 하는데 탁월할 것이라 생각했다.\n하지만 노션의 내보내기 기능은 어딘가 아쉬운 부분이 있어 이것을 조금 손봐줄 필요가 있었다.\n추가 작업 H 태그 노션은 h1 ~ h3 태그만 지원하며 h4~h6 태그는 없다. 그런데 h1 태그는 포스트에 여러개 존재하면 SEO 점수에 좋지 않은 영향을 미치기 떄문에 hugo 포스팅을 염두에 둔다면 h2 와 h3 태그만 사용해야하는 문제가 발생한다.\n그대로 사용하기엔 기존의 글을 그대로 옮기기 위해 추가적인 작업이 필요한 문제와(h1 태그 안쓴 글이 없었다..) 평문과 두 종류의 Heading 만으로 표현하기에는 제약이 많다는 점 때문에 손봐줄 필요성을 느꼈다.\n그래서 h1 ~ h6 태그를 h2 ~ 볼드체 한 단계씩 낮추는 작업을 추가하였다.\n# h태그 단계 낮추기 for p in paragraphs: # ``` 코드블럭 확인(스페이스 제외) if re.match(\u0026#39;[\\s]*```\u0026#39;, p): blockquote ^= 1 # 코드블럭 내부인 경우 h 태그 탐색안함 if blockquote == 1: modParagraphs.append(p) continue # \u0026gt; 인용문 줄바꿈 풀리는 현상(다단 인용은 처리 어려움) if re.match(\u0026#39;[\\s]*\u0026gt;\u0026#39; , p): quotation = 1 elif quotation == 1 and re.fullmatch(\u0026#39;\u0026#39;, p): quotation = 0 # 인용문 종료 # \u0026gt; 인용문 줄바꿈 처리, h 태그 탐색안함 if quotation == 1: modParagraphs.append(p + \u0026#39; \u0026#39;) continue # h1 ~ h5 태그 hn + 1 태그로 바꾸기 if re.match(\u0026#39;[\\s]*#{1,5}\\s\u0026#39;, p): p = re.sub(\u0026#39;([\\s]*#{1,5})\\s\u0026#39;,r\u0026#39;\\1# \u0026#39;, p) # h6 태그는 볼드체로 수정 elif re.match(\u0026#39;[\\s]*#{6}\\s\u0026#39;, p): p = re.sub(\u0026#39;([\\s]*)#{6}\\s([\\W\\w]*)\u0026#39;,r\u0026#39;** \\1\\2 **\u0026#39;, p) 처음에 정규식 1줄로 해결하려고 해보았지만 코드블럭, 인용문, 본문 사이사이의 # 문자 등 변수가 많았고(코드블럭과 인용문 내부의 # 태그는 손대지 않는다!), 결국 본문을 줄바꿈 문자를 기준으로 나누어 다소 복잡한 구문으로 변환작업을 구성했다.\n이미지 파일 경로 한글이 인코딩 된 방식인데 이상하게 한글 하이픈 숫자 조합은 엑스박스라는 결과물이 나온다. (한글까지만 적힌건 괜찮고, 영어 하이픈 숫자는 또 괜찮다..) 뒤늦게 생각해보니 노션과 휴고 url 인코딩 방식이 달라서 그렇지 않았나 싶은데 조금 무식하게 이미지 파일 주소와 이름을 아예 바꿔버리는 방식을 택했다.\n 테스트 이미지1.jpg → pic-0001.jpg\n # 이미지 파일명 변경 for img in imgs: img_ext = re.sub(\u0026#34;[\\w\\W]+?(\\.[\\w]+?\\Z)\u0026#34;,r\u0026#34;\\1\u0026#34;,img) # 확장자 가져오기 rename_img = \u0026#34;pic-{0:04d}\u0026#34;.format(idx) + img_ext # 변경할 이름 설정 origin_img_path = rename_img_dir_path + \u0026#34;/\u0026#34; + img rename_img_path = rename_img_dir_path + \u0026#34;/\u0026#34; + rename_img os.rename(origin_img_path, rename_img_path) # 파일 이름 변경 img_dict[img] = rename_img # 변경 전/후를 딕셔너리 쌍으로 저장 idx += 1 # 본문 이미지 링크 수정 if \u0026#39;img_dict\u0026#39; in globals(): for key, val in img_dict.items(): origin_path = parse.quote(origin_img_dir_name + \u0026#34;/\u0026#34; + key, \u0026#39;/!@#$\u0026amp;()_-+=~\\\u0026#39;;,\u0026#39;) fix_path = rename_img_dir_name + \u0026#34;/\u0026#34; + val body = body.replace(origin_path, fix_path) 나중에 시간이 된다면 이 부분은 좀더 세련된 방식으로 바꿔야 할 듯 하다.\nfront matters 날짜 포맷 노션에서는 날짜 포맷이 다음과 같다.\n이걸 hugo에서 활용하려면 \u0026ldquo;2021-10-16T23:43:00+09:00\u0026rdquo; 와 같은 형식으로 변경해주어야 했다.\n이 부분은 datetime 과 pytz 로 해결하였다.\nfrom datetime import datetime import pytz def str_to_date(str): TIME_ZONE = pytz.timezone(\u0026#39;Asia/Seoul\u0026#39;) str = re.sub(\u0026#34;오후\u0026#34;, \u0026#34;PM\u0026#34;, str) str = re.sub(\u0026#34;오전\u0026#34;, \u0026#34;AM\u0026#34;, str) try: res = datetime.strptime(str, \u0026#34;%Y년 %m월 %d일 %p %I:%M\u0026#34;) except ValueError: try: res = datetime.strptime(str, \u0026#34;%Y년 %m월 %d일\u0026#34;) except ValueError: res = datetime.now() res = TIME_ZONE.localize(res).isoformat() return res 줄바꿈 노션에서 내보내기한 md 파일은 기존의 줄바꿈이 제대로 반영되어 있지 않다. 몇줄을 띄우더라도 한줄만 넘어간다.\n한 줄은 너무 답답하게 느껴져 두줄씩 더 띄울 수 있도록 정규식을 짜 보았다.\n# 줄바꿈 간격 수정 (코드블럭 아래는 줄바꿈이 안됨) body = re.sub(\u0026#34;(```\\w[^`]*?```\\n)?([^`]*?)\\n\\n\u0026#34;, r\u0026#34;\\1\\2\u0026#34; + (\u0026#34;\\nㅤ \u0026#34; * 3) + \u0026#34;\\n\u0026#34;, body) body = re.sub(\u0026#34;(```)\\n\\n\u0026#34;, r\u0026#34;\\1\u0026#34; + (\u0026#34;\\nㅤ \u0026#34; * 3) + \u0026#34;\\n\u0026#34;, body) 현재는 정규식으로 처리하지 않고 css로 줄간격을 조정하고있다.\nfront matters 입력 hugo 에 포스팅을 하기위해서는 md 파일 상단에 아래 사진처럼 front matters를 입력해야한다.\n노션에서 아래와 같이 속성을 입력하면 md 전환 시에 지정된 폼으로 변경될 수 있도록 세팅하였다.\n부모 폴더 생성 및 _index.md 파일 처리 이 부분은 노션의 문제는 아니고 hugo 포스팅 시에 느낀 번거로운 점이다. 글을 게시하려면 front matters 에 입력한 identifier 에 맞춰 폴더들을 생성하고 폴더에 게시글이 없는 폴더의 경우 _index.md 파일도 생성해 주어야 한다.\n그래서 이 부분은 front matters 를 파싱해 자동으로 경로를 생성하고 _index.md 파일을 생성하도록 설정했다.\n# 프로젝트 폴더가 있으면 content 폴더 + 부모폴더에 저장 if(is_project_path): path = path + \u0026#39;/content/posts\u0026#39; posts_path = path # _index.md 생성용도 for category in categories: path = path + \u0026#39;/\u0026#39; + category path = path + \u0026#39;/\u0026#39; + name try: shutil.copytree(temp_path, path) except: copy_tree(temp_path, path) # 부모폴더에 _index.md 만들기 if(is_project_path): for category in categories: posts_path = posts_path + \u0026#39;/\u0026#39; + category index1 = posts_path + \u0026#34;/index.md\u0026#34; index2 = posts_path + \u0026#34;/_index.md\u0026#34; if not os.path.isfile(index1) and not os.path.isfile(index2): md = open(posts_path + \u0026#39;/_index.md\u0026#39;, \u0026#39;wt\u0026#39;, encoding=\u0026#39;UTF8\u0026#39;) md.write(get_index_md(category)) md.close() 그 밖에 해결 못한 것들 인용문 안에 줄바꿈이 있을 경우 인용문이 풀리는 현상, 인용문 안의 인용문, 북마크 기능, 인라인 리스트 등 노션 페이지를 마크다운으로 변경하면 훼손되는 폼이 꽤 많다는걸 작업하는 도중에 깨달았다. (사전 조사 부족) 뒤늦게 html 파일로 내보내기를 해서 작업을 했다면 퀄리티가 낫지 않았을까 하는 생각이 들었다. 역시 마크다운은 간결한 맛이 최고라는 자기위안으로 더이상의 삽질은 하지 않기로 다짐했다.\n결과물 앞서 말한 내용을 매번 하기 귀찮기 때문에 변환 툴을 만들었다. 다듬어야할 부분이 많겠지만 일단 내가 사용하는 범위에서는 잘 작동한다.\n링크 : https://github.com/taedi90/notion2toha\n","date":"September 13, 2021","hero":"/images/hero/blog.png","permalink":"https://log.taedi.net/notion-to-hugo-toha/","summary":"노션은 기본적으로 작성한 글을 마크다운으로 내보낼 수 있는 기능이 있어 hugo 포스팅을 하는데 탁월할 것이라 생각했다.\n하지만 노션의 내보내기 기능은 어딘가 아쉬운 부분이 있어 이것을 조금 손봐줄 필요가 있었다.\n추가 작업 H 태그 노션은 h1 ~ h3 태그만 지원하며 h4~h6 태그는 없다. 그런데 h1 태그는 포스트에 여러개 존재하면 SEO 점수에 좋지 않은 영향을 미치기 떄문에 hugo 포스팅을 염두에 둔다면 h2 와 h3 태그만 사용해야하는 문제가 발생한다.\n그대로 사용하기엔 기존의 글을 그대로 옮기기 위해 추가적인 작업이 필요한 문제와(h1 태그 안쓴 글이 없었다.","tags":["blog","github pages","hugo"],"title":"Github 블로그 설정 3. Notion 페이지 변환"},{"categories":null,"contents":"서론 어느정도 설정을 마쳤다면 마지막은 세팅한 블로그를 Github Pages 에 올리는 일만 남았다. Hugo는 자동빌드가 되지않아 push 만 하면 페이지가 업데이트되는 jekyll과는 조금 다르다고 한다.\n그래서 전체 프로젝트 파일과 빌드 된 파일을 각각 저장할 공간이 필요한데 리포지토리를 각각 분리하여 구분하는 방식과 한개 리포지토리에 브랜치를 나누어 관리하는 방식이 있었다. 두가지 방법 모두 시도해보았는데 개인적으로 리포지토리가 많으면 관리가 어렵다고 느껴 한개 리포지토리를 활용한 방법을 택했다.\n진행순서 1. 리포지토리 생성 \u0026lsquo;자신의 아이디.github.io\u0026rsquo; 라는 이름의 리포지토리를 생성한다.\n2. source 브랜치 생성 브랜치 이름은 상관없겠지만 참고한 사이트를 따라 source라는 이름으로 브랜치를 생성하여 주었다.\n# create the source branch $ git checkout -b source # push the source branch into Github $ git push origin source 3. Github 설정 settings \u0026gt; branches \u0026gt; default branch 를 \u0026lsquo;source\u0026rsquo; 브랜치로 설정\nsettings \u0026gt; pages \u0026gt; source 를 \u0026lsquo;main\u0026rsquo; 브랜치로 설정\nsettings \u0026gt; actions \u0026gt; actions permissions \u0026gt; allow all actions\n(선택사항) 2차 도메인 설정\n4. 프로젝트 폴더내 .github/workflow/deploy-site.yaml 파일 생성 name: Deploy to Github Pages on: push: branches: - source  # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: main # if your main branch is `master` use that here. publish_dir: ./public 만약 2차 도메인을 사용한다면 아래 코드를 사용\nname: Deploy to Github Pages on: push: branches: - source  # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build run: hugo --minify - name: CNAME copy run: cp CNAME ./public - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: main # if your main branch is `master` use that here. publish_dir: ./public 5. 배포 이제 source 브랜치에서 푸시하면 자동으로 배포된다.\n기타. 오류 해결 (삽질기) 푸시 이후 설정한 action이 제대로 실행되지 않는 문제 빌드에서 오류가 난다\u0026hellip;\n구글링 중에 찾은 내용으로 정확히 이해는 못했지만 서브모듈을 다시 인덱싱 해주라는 내용인듯\n하지만 오류가 멈추질 않는다..\ndeploy-site.yaml 에서 if: github.ref == \u0026lsquo;refs/heads/main\u0026rsquo; 를 지워본다. (위의 코드에서는 이미 지워져있음)\n해결!\ndeploy 시에 custom domain 이 초기화 되어버리는 현상 custiom domain 을 다시 설정한 뒤 main 리포지토리에 생성 된 CNAME 파일을 받아 프로젝트 루트 디렉토리에 복사, 그리고 아래 코드를 deploy-site.yaml 에 추가\n- name: CNAME copy run: cp CNAME ./public 해결!\n참고  https://toha-guides.netlify.app/posts/getting-started/github-pages/ https://gohugo.io/hosting-and-deployment/hosting-on-github/  ","date":"September 13, 2021","hero":"/images/hero/blog.png","permalink":"https://log.taedi.net/hugo-upload/","summary":"서론 어느정도 설정을 마쳤다면 마지막은 세팅한 블로그를 Github Pages 에 올리는 일만 남았다. Hugo는 자동빌드가 되지않아 push 만 하면 페이지가 업데이트되는 jekyll과는 조금 다르다고 한다.\n그래서 전체 프로젝트 파일과 빌드 된 파일을 각각 저장할 공간이 필요한데 리포지토리를 각각 분리하여 구분하는 방식과 한개 리포지토리에 브랜치를 나누어 관리하는 방식이 있었다. 두가지 방법 모두 시도해보았는데 개인적으로 리포지토리가 많으면 관리가 어렵다고 느껴 한개 리포지토리를 활용한 방법을 택했다.\n진행순서 1. 리포지토리 생성 \u0026lsquo;자신의 아이디.github.io\u0026rsquo; 라는 이름의 리포지토리를 생성한다.","tags":["blog","github pages","hugo"],"title":"Github 블로그 설정 4. 대망의 업로드"},{"categories":null,"contents":"외부 톰캣에 프로젝트를 배포하기 위해서는 war 파일을 직접 업로드 하여야하는데, 이걸 IDE에서 run 할때 바로 처리하는 방법을 알아보았다. (이해가 부족하여 문장이 뒤죽박죽..)\n작업 환경  시놀로지 Docker - tomcat-8.5.69버전 IDE - eGov3.10  시놀로지 세팅  ssh 와 vi를 다루는 데 능숙하지 않기 때문에 시놀로지 gui 환경에서 작업을 처리할 방법을 구상해 보았다.\n볼륨 마운트  작업 편의성을 위하여 외부 폴더들에 conf 와 webapps 경로를 마운트 해주었다. \u0026lsquo;컨테이너 선택 \u0026gt; 편집 \u0026gt; 볼륨\u0026rsquo; 으로 이동하여 아래와 같이 폴더를 마운트 하였다. (폴더 경로는 임의로 변경해도 무방하다.)  여기서 conf 폴더는 tomcat 관련 설정파일들이 있는 것으로 보이고, webapps는 배포할 프로젝트들을 업로드할 공간이다.\n마운트한 폴더에 데이터 붙여 넣기  \u0026lsquo;컨테이너 선택 \u0026gt; 설정 \u0026gt; 내보내기\u0026rsquo; 를 통해 docker에 설치 된 tomcat을 로컬 저장소에 백업 이후 압축을 해제하고 usr/local/tomcat/conf\nusr/local/tomcat/webapps.dist/manager 경로의 내용을 마운트한 폴더에 복사  webapps 폴더에 마운트되는 경로에 manager 폴더 복사 conf 폴더에 마운트되는 경로에 기존 conf 하위 파일들 복사 시놀로지에서 세팅은 여기까지며, 이후 웹 어플리케이션을 사용하는 방식과 ftp를 활용하는 방식 중에 선택하여 설정이 가능하다.(ssh 방식 등 알아보지 않은 다른 방법들이 있음)\n첫번째 방법. Tomcat 웹 어플리케이션 활용  conf \u0026gt; tomcat-users.xml 파일 내용 추가  아이디, 패스워드는 manager 페이지 접속에 사용  \u0026lt;role rolename=\u0026#34;manager-gui\u0026#34; /\u0026gt; \u0026lt;role rolename=\u0026#34;manager-script\u0026#34; /\u0026gt; \u0026lt;role rolename=\u0026#34;manager-jmx\u0026#34; /\u0026gt; \u0026lt;role rolename=\u0026#34;manager-status\u0026#34; /\u0026gt; \u0026lt;user username=\u0026#34;아이디\u0026#34; password=\u0026#34;패스워드\u0026#34; roles=\u0026#34;manager-gui,manager-script,manager-jmx,manager-status\u0026#34; /\u0026gt; manager \u0026gt; META-INF \u0026gt; context.xml 파일 수정  valve ~ 부분 주석처리  \u0026lt;Context antiResourceLocking=\u0026#34;false\u0026#34; privileged=\u0026#34;true\u0026#34; \u0026gt; \u0026lt;CookieProcessor className=\u0026#34;org.apache.tomcat.util.http.Rfc6265CookieProcessor\u0026#34; sameSiteCookies=\u0026#34;strict\u0026#34; /\u0026gt; \u0026lt;!--\u0026lt;Valve className=\u0026#34;org.apache.catalina.valves.RemoteAddrValve\u0026#34; allow=\u0026#34;127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\u0026#34; /\u0026gt;--\u0026gt; \u0026lt;Manager sessionAttributeValueClassNameFilter=\u0026#34;java\\.lang\\.(?:Boolean|Integer|Long|Number|String)|org\\.apache\\.catalina\\.filters\\.CsrfPreventionFilter\\$LruCache(?:\\$1)?|java\\.util\\.(?:Linked)?HashMap\u0026#34;/\u0026gt; \u0026lt;/Context\u0026gt; 서버주소/manager/html 접속 확인  로그인 이후 아래와 같은 페이지가 정상적으로 표시되는지 확인  pom.xml 내용 추가  tomcat8-maven-plugin 은 없으며 7버전으로 정상적으로 동작함 url과 로그인 정보는 보안을 위해 settings.xml에 별도 설정  \u0026lt;plugin\u0026gt; \u0026lt;groupId\u0026gt;org.apache.tomcat.maven\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;tomcat7-maven-plugin\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;2.2\u0026lt;/version\u0026gt; \u0026lt;configuration\u0026gt; \u0026lt;url\u0026gt;${tomcat-server-url}\u0026lt;/url\u0026gt; \u0026lt;server\u0026gt;tomcat-server\u0026lt;/server\u0026gt; \u0026lt;path\u0026gt;/${name}\u0026lt;/path\u0026gt; \u0026lt;/configuration\u0026gt; \u0026lt;/plugin\u0026gt; settings.xml 내용 추가  기본적으로 C:\\Users\\사용자.m2 경로에 있음 window \u0026gt; preferences \u0026gt; maven \u0026gt; user settings 에서 위치 변경가능  \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;settings xmlns=\u0026#34;http://maven.apache.org/POM/4.0.0\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xsi:schemaLocation=\u0026#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\u0026#34;\u0026gt; \u0026lt;servers\u0026gt; \u0026lt;server\u0026gt; \u0026lt;id\u0026gt;tomcat-server\u0026lt;/id\u0026gt; \u0026lt;!-- 아이디 --\u0026gt; \u0026lt;username\u0026gt;아이디\u0026lt;/username\u0026gt; \u0026lt;!-- 비밀번호 --\u0026gt; \u0026lt;password\u0026gt;비밀번호\u0026lt;/password\u0026gt; \u0026lt;/server\u0026gt; \u0026lt;/servers\u0026gt; \u0026lt;profiles\u0026gt; \u0026lt;profile\u0026gt; \u0026lt;id\u0026gt;inject-tomcat-server-url\u0026lt;/id\u0026gt; \u0026lt;properties\u0026gt; \u0026lt;!-- 서버 주소 --\u0026gt; \u0026lt;tomcat-server-url\u0026gt;http://사이트 주소:포트번호/manager/text\u0026lt;/tomcat-server-url\u0026gt; \u0026lt;/properties\u0026gt; \u0026lt;/profile\u0026gt; \u0026lt;/profiles\u0026gt; \u0026lt;activeProfiles\u0026gt; \u0026lt;activeProfile\u0026gt;inject-tomcat-server-url\u0026lt;/activeProfile\u0026gt; \u0026lt;/activeProfiles\u0026gt; \u0026lt;/settings\u0026gt; url까지 pom.xml에서 빼려다보니 settings.xml의 코드가 늘어났다.\nMaven build  프로젝트 우클릭 \u0026gt; Run As \u0026gt; Maven build   Goals에 tomcat7:deploy 입력 후 run!  두번째 방법. FTP 활용  ftp를 사용하려면 시놀로지 설정이 조금 더 필요하며 보안 부분에도 고려해야할 사항이 발생할 것으로 보인다. (그래서 사실 최초에 ftp를 이용해서 deploy 여부를 확인만 하고 첫번째 방식인 웹 어플리케이션 방식으로 변경하였다.)\n제어판 \u0026gt; 파일 서비스 \u0026gt; FTP \u0026gt; FTP 서비스 활성화  서비스 활성화 및 포트 설정 (사설 IP 외부 접속의 경우 포트 포워딩 필요)  제어판 \u0026gt; 파일 서비스 \u0026gt; FTP \u0026gt; 일반 \u0026gt; 고급설정 \u0026gt; 루트 디렉토리 변경  순수 tomcat 용도로만 ftp가 필요하기 때문에 루트 폴더를 webapps 에 마운트 될 디렉토리로 한정 해줌  pom.xml 수정 \u0026lt;!-- project 내부 --\u0026gt; \u0026lt;distributionManagement\u0026gt; \u0026lt;repository\u0026gt; \u0026lt;id\u0026gt;repo\u0026lt;/id\u0026gt; \u0026lt;url\u0026gt;ftp://주소:포트번호/\u0026lt;/url\u0026gt; \u0026lt;/repository\u0026gt; \u0026lt;/distributionManagement\u0026gt; \u0026lt;!-- build 내부 --\u0026gt; \u0026lt;extensions\u0026gt; \u0026lt;extension\u0026gt; \u0026lt;groupId\u0026gt;org.apache.maven.wagon\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;wagon-ftp\u0026lt;/artifactId\u0026gt; \u0026lt;version\u0026gt;3.2.0\u0026lt;/version\u0026gt; \u0026lt;/extension\u0026gt; \u0026lt;/extensions\u0026gt; settings.xml 수정  기본적으로 C:\\Users\\사용자.m2 경로에 있음 window \u0026gt; preferences \u0026gt; maven \u0026gt; user settings 에서 위치 변경가능   id 태그 안의 값은 pom.xml의 내용과 동일해야함  \u0026lt;server\u0026gt; \u0026lt;id\u0026gt;repo\u0026lt;/id\u0026gt; \u0026lt;username\u0026gt;계정\u0026lt;/username\u0026gt; \u0026lt;password\u0026gt;비밀번호\u0026lt;/password\u0026gt; \u0026lt;/server\u0026gt; \u0026lt;/servers\u0026gt; Maven build  프로젝트 우클릭 \u0026gt; Run As \u0026gt; Maven build   Goals에 deploy 입력 후 run!  References  http://maven.apache.org/wagon/wagon-providers/wagon-ftp/\nhttps://m.blog.naver.com/PostView.naver?isHttpsRedirect=true\u0026amp;blogId=javaking75\u0026amp;logNo=220947560568\nhttps://hongku.tistory.com/196\nhttps://www.baeldung.com/tomcat-deploy-war\nhttps://maven.apache.org/examples/injecting-properties-via-settings.html\n","date":"September 6, 2021","hero":"/images/hero/java.png","permalink":"https://log.taedi.net/tomcat-external-deploy-maven/","summary":"외부 톰캣에 프로젝트를 배포하기 위해서는 war 파일을 직접 업로드 하여야하는데, 이걸 IDE에서 run 할때 바로 처리하는 방법을 알아보았다. (이해가 부족하여 문장이 뒤죽박죽..)\n작업 환경  시놀로지 Docker - tomcat-8.5.69버전 IDE - eGov3.10  시놀로지 세팅  ssh 와 vi를 다루는 데 능숙하지 않기 때문에 시놀로지 gui 환경에서 작업을 처리할 방법을 구상해 보았다.\n볼륨 마운트  작업 편의성을 위하여 외부 폴더들에 conf 와 webapps 경로를 마운트 해주었다. \u0026lsquo;컨테이너 선택 \u0026gt; 편집 \u0026gt; 볼륨\u0026rsquo; 으로 이동하여 아래와 같이 폴더를 마운트 하였다.","tags":["deploy","java","maven","tomcat"],"title":"[Maven] 외부 톰캣에 deploy 설정하기"}]